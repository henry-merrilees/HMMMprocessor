$version Generated by VerilatedVcd $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire  1 F clk $end
  $var wire  1 G reset $end
  $scope module hmmm $end
   $var wire 16 9 Instr [15:0] $end
   $var wire  1 < MemAdrSrc $end
   $var wire  1 H MemWrite $end
   $var wire  1 = PcSrc $end
   $var wire  1 ; RegSrc $end
   $var wire  1 : RegWrite $end
   $var wire 32 > aluop [31:0] $end
   $var wire  1 F clk $end
   $var wire 32 ? instruction_type [31:0] $end
   $var wire  1 G reset $end
   $scope module controller $end
    $var wire  1 < MemAdrSrc $end
    $var wire  1 H MemWrite $end
    $var wire  1 = PcSrc $end
    $var wire  1 ; RegSrc $end
    $var wire  1 : RegWrite $end
    $var wire 32 > aluop [31:0] $end
    $var wire 16 9 instr [15:0] $end
    $var wire 32 ? instruction_type [31:0] $end
   $upscope $end
   $scope module datapath $end
    $var wire  8 B Imm [7:0] $end
    $var wire 16 9 Instr [15:0] $end
    $var wire  1 < MemAdrSrc $end
    $var wire  8 3 MemDataAddress [7:0] $end
    $var wire  1 H MemWrite $end
    $var wire  8 @ Pc [7:0] $end
    $var wire  1 = PcSrc $end
    $var wire  8 A PcTarget [7:0] $end
    $var wire  1 ; RegSrc $end
    $var wire  1 : RegWrite $end
    $var wire 16 4 Result [15:0] $end
    $var wire 16 I SrcA [15:0] $end
    $var wire  1 F clk $end
    $var wire 32 ? instruction_type [31:0] $end
    $var wire 16 8 mem_read_data [15:0] $end
    $var wire  4 C rX [3:0] $end
    $var wire  4 D rY [3:0] $end
    $var wire  4 E rZ [3:0] $end
    $var wire  1 G reset $end
    $var wire 16 5 rf_read_data_1 [15:0] $end
    $var wire 16 6 rf_read_data_2 [15:0] $end
    $var wire 16 7 rf_read_data_3 [15:0] $end
    $scope module mem $end
     $var wire  1 F clk $end
     $var wire  8 3 data_address [7:0] $end
     $var wire  8 @ instruction_address [7:0] $end
     $var wire 16 9 instruction_data [15:0] $end
     $var wire 16 8 read_data [15:0] $end
     $var wire 16 J write_data [15:0] $end
     $var wire  1 H write_en $end
    $upscope $end
    $scope module rf $end
     $var wire  4 C address_1 [3:0] $end
     $var wire  4 D address_2 [3:0] $end
     $var wire  4 E address_3 [3:0] $end
     $var wire  1 F clk $end
     $var wire 16 5 read_data_1 [15:0] $end
     $var wire 16 6 read_data_2 [15:0] $end
     $var wire 16 7 read_data_3 [15:0] $end
     $var wire 16 # registers[0] [15:0] $end
     $var wire 16 - registers[10] [15:0] $end
     $var wire 16 . registers[11] [15:0] $end
     $var wire 16 / registers[12] [15:0] $end
     $var wire 16 0 registers[13] [15:0] $end
     $var wire 16 1 registers[14] [15:0] $end
     $var wire 16 2 registers[15] [15:0] $end
     $var wire 16 $ registers[1] [15:0] $end
     $var wire 16 % registers[2] [15:0] $end
     $var wire 16 & registers[3] [15:0] $end
     $var wire 16 ' registers[4] [15:0] $end
     $var wire 16 ( registers[5] [15:0] $end
     $var wire 16 ) registers[6] [15:0] $end
     $var wire 16 * registers[7] [15:0] $end
     $var wire 16 + registers[8] [15:0] $end
     $var wire 16 , registers[9] [15:0] $end
     $var wire 16 4 write_data_1 [15:0] $end
     $var wire  1 : write_en_1 $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b0000000000000000 #
b0000000000000000 $
b0000000000000000 %
b0000000000000000 &
b0000000000000000 '
b0000000000000000 (
b0000000000000000 )
b0000000000000000 *
b0000000000000000 +
b0000000000000000 ,
b0000000000000000 -
b0000000000000000 .
b0000000000000000 /
b0000000000000000 0
b0000000000000000 1
b0000000000000000 2
b00000000 3
b0100000100000000 4
b0000000000000000 5
b0000000000000000 6
b0000000000000000 7
b0100000100000000 8
b0100000100000000 9
1:
1;
1<
0=
b00000000000000000000000000000000 >
b00000000000000000000000000000101 ?
b00000000 @
b00000000 A
b00000000 B
b0001 C
b0000 D
b0000 E
1F
1G
0H
b0000000000000000 I
b0000000000000000 J
#1
0F
#2
b0100000100000000 $
b0000000000000010 4
b0001001000000010 9
0;
b00000000000000000000000000000100 ?
b00000010 @
b00000100 A
b00000010 B
b0010 C
b0010 E
1F
0G
#3
0F
#4
b0000000000000010 %
b0000000000000010 5
b0000000000000010 7
b0000001000000010 9
0:
b00000000000000000000000000000011 ?
b00000100 @
1F
#5
0F
#6
b0000000000000011 4
b0000000000000000 5
b0000000000000000 7
b0001001100000011 9
1:
b00000000000000000000000000000100 ?
b00000110 @
b00000110 A
b00000011 B
b0011 C
b0011 E
1F
#7
0F
#8
b0000000000000011 &
b0000000000000010 4
b0000000000000011 5
b0000000000000010 7
b0000001100000010 9
0:
b00000000000000000000000000000011 ?
b00001000 @
b00000100 A
b00000010 B
b0010 E
1F
#9
0F
#10
b0000000000000100 4
b0000000000000000 5
b0000000000000000 7
b0001010000000100 9
1:
b00000000000000000000000000000100 ?
b00001010 @
b00001000 A
b00000100 B
b0100 C
b0100 E
1F
#11
0F
#12
b0000000000000100 '
b0000000000000010 4
b0000000000000100 5
b0000000000000010 7
b0000010000000010 9
0:
b00000000000000000000000000000011 ?
b00001100 @
b00000100 A
b00000010 B
b0010 E
1F
#13
0F
#14
b00000001 3
b0001001000000010 4
b0000000000000000 5
b0100000100000000 7
b0001001000000010 8
b0010010100000001 9
1:
1;
0<
b00000000000000000000000000001001 ?
b00001110 @
b00000010 A
b00000001 B
b0101 C
b0001 E
1F
#15
0F
#16
b0001001000000010 (
b00000000 3
b0000000000000010 4
b0001001000000010 5
b0000000000000010 7
b0100000100000000 8
b0000010100000010 9
0:
0;
1<
b00000000000000000000000000000011 ?
b00010000 @
b00000100 A
b00000010 B
b0010 E
1F
#17
0F
#18
b00001001 3
b0000000000001001 4
b0000000000000000 5
b0000000000000000 7
b1011000000001001 8
b1011000000001001 9
0<
1=
b00000000000000000000000000010010 ?
b00010010 @
b00010010 A
b00001001 B
b0000 C
b1001 E
1F
#19
0F
#20
1F
#21
0F
#22
1F
#23
0F
#24
1F
#25
0F
#26
1F
#27
0F
#28
1F
#29
0F
#30
1F
#31
0F
#32
1F
#33
0F
#34
1F
#35
0F
#36
1F
#37
0F
#38
1F
#39
0F
#40
1F
#41
0F
#42
1F
#43
0F
#44
1F
#45
0F
#46
1F
#47
0F
#48
1F
#49
0F
#50
1F
#51
0F
#52
1F
#53
0F
#54
1F
#55
0F
#56
1F
#57
0F
#58
1F
#59
0F
#60
1F
#61
0F
#62
1F
#63
0F
#64
1F
#65
0F
#66
1F
#67
0F
#68
1F
#69
0F
#70
1F
#71
0F
#72
1F
#73
0F
#74
1F
#75
0F
#76
1F
#77
0F
#78
1F
#79
0F
#80
1F
#81
0F
#82
1F
#83
0F
#84
1F
#85
0F
#86
1F
#87
0F
#88
1F
#89
0F
#90
1F
#91
0F
#92
1F
#93
0F
#94
1F
#95
0F
#96
1F
#97
0F
#98
1F
#99
0F
